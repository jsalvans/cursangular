{
	"angular.binding.oneway.explicacio": "Aquest tipus de binding serveix per a imprimir dades del component Angular a la pantalla.",
	"angular.binding.oneway.on": "On <code>expression</code> és el valor que es vol imprimir, ja sigui una variable o un càlcul, i <code>target</code> és l'atribut on es vol aplicar l'expressió.",
	"angular.binding.onewaybind.explicacio": "Aquest tipus de binding serveix per a enviar dades de la vista cap al component Angular. Es sol fer servir per cridar accions depenent dels esdeveniments que ocorrin a la vista.",
	"angular.binding.onewaybind.on": "On <code>expression</code> és el valor que es vol enviar, ja sigui una variable o un càlcul, i <code>target</code> és l'atribut on es vol aplicar l'expressió, normalment esdeveniments.",
	"angular.binding.twoway.explicacio": "Aquest tipus de binding serveix per a enviar i rebre dades de la vista al component. Si es canvia el valor en la vista s'actualitzarà la variable corresponent al component i viceversa.",
	"angular.binding.twoway.on": "On <code>expression</code> és el valor que es vol imprimir, normalment una variable, i <code>target</code> és l'atribut on es vol aplicar l'expressió.",
	"angular.directives.ngclass.array.explicacio": "S'aplicarà al tag la classe corresponent a cada element de l'array.",
	"angular.directives.ngclass.explicacio1": "<i>ngClass</i> és una directiva que permet aplicar una o varies classes a un tag, les quals poden provenir o no d'una variable i poden tenir o no una condició per aplicar-les.",
	"angular.directives.ngclass.explicacio2": "Depenent del contingut de l'atribut reaccionarà d'una manera o altre.",
	"angular.directives.ngclass.object.explicacio1": "S'aplicarà al tag la classe corresponent a cada element de l'objecte sempre i quant es compleixi la condició que el precedeix.",
	"angular.directives.ngclass.object.explicacio2": "L'element de l'objecte poden ser múltiples classes separades per espai.",
	"angular.directives.ngclass.string.explicacio": "S'aplicarà al tag la classe corresponent a cada text separat entre espais.",
	"angular.directives.ngfor.exemple.cognoms": "Cognoms",
	"angular.directives.ngfor.exemple.edat": "Edat",
	"angular.directives.ngfor.exemple.element": "Element",
	"angular.directives.ngfor.exemple.esimpar": "És element imparell?",
	"angular.directives.ngfor.exemple.espar": "És element parell?",
	"angular.directives.ngfor.exemple.esprimer": "És el primer?",
	"angular.directives.ngfor.exemple.esultim": "És l'últim?",
	"angular.directives.ngfor.exemple.index": "Índex",
	"angular.directives.ngfor.exemple.nom": "Nom",
	"angular.directives.ngfor.explicacio": "<i>ngFor</i> és una directiva que permet repetir codi HTML per cada element existent en una llista d'elements.",
	"angular.directives.ngfor.on": "On <code>array</code> és la llista d'elements a iterar i <code>element</code> és la variable assignada a l'element actual de la iteració.",
	"angular.directives.ngfor.vars.even": "Booleà que retornarà <code>true</code> si l'element actual de la iteració és imparell (primer, tercer, etc).",
	"angular.directives.ngfor.vars.explicacio1": "<i>ngFor</i> conté variables auxiliars que ens proporcionen informació de l'element actual el de la iteració. Són els següents:",
	"angular.directives.ngfor.vars.explicacio2": "Per poder fer servir aquestes variables se'ls hi ha d'assignar un alies, els quals es poden declarar de les següents formes:",
	"angular.directives.ngfor.vars.first": "Booleà que retornarà <code>true</code> si l'element actual és el primer de la iteració.",
	"angular.directives.ngfor.vars.index": "Índex de la iteració començant per 0.",
	"angular.directives.ngfor.vars.last": "Booleà que retornarà <code>true</code> si l'element actual és l'últim de la iteració.",
	"angular.directives.ngfor.vars.odd": "Booleà que retornarà <code>true</code> si l'element actual de la iteració és par (segon, quart, etc).",
	"angular.directives.ngfor.vars.on": "On <code>variable</code> és la variable auxiliar que es vol utilitzar i <code>alias</code> és el nom que se li assignarà a la variable per tal de poder-la fer servir.",
	"angular.directives.ngfor.vars.title": "Variables auxiliars",
	"angular.directives.ngif.else.explicacio": "<i>ngIf</i> també pot mostrar un altre HTML en cas de que la condició no es compleixi.",
	"angular.directives.ngif.else.on": "On <code>condition</code> és la condició per a que és mostri o no l'HTML, <code>content</code> és el contingut que es mostrarà en cas de que la condició es compleixi, <code>templateId</code> és la ID del <code>ng-template</code> que es mostrarà en cas de que la condició no es compleixi i <code>elsecontent</code> és el contingut d'aquest <code>ng-template</code>.",
	"angular.directives.ngif.explicacio": "<i>ngIf</i> és una directiva que permet mostrar o no codi HTML depenent de la condició que se li fiqui.",
	"angular.directives.ngif.nomes.ngtemplate": "Només vàlid en el tag ng-template",
	"angular.directives.ngif.on": "On <code>condition</code> és la condició per a que és mostri o no l'HTML i <code>content</code> és el contingut que es mostrarà en cas de que la condició es compleixi.",
	"angular.directives.ngif.then.explicacio1": "Finalment, al <i>ngIf</i> també se li pot indicar que dibuixi un bloc indicat en comptes del contingut del tag on és el <i>ngIf</i>.",
	"angular.directives.ngif.then.explicacio2": "Amb el <i>then</i> el contingut del tag on estigui el <i>ngIf</i> no és mostrarà mai.",
	"angular.directives.ngif.then.on": "On <code>condition</code> és la condició per a que és mostri o no l'HTML, <code>templateId</code> és la ID del <code>ng-template</code> que es mostrarà en cas de que la condició es compleixi, <code>thencontent</code> és el contingut d'aquest <code>ng-template</code>, <code>elseTemplateId</code> és la ID del <code>ng-template</code> que es mostrarà en cas de que la condició no es compleixi i <code>elsecontent</code> és el contingut d'aquest últim <code>ng-template</code>.",
	"angular.directives.ngmodel.explicacio1": "<i>NgModel</i> és una directiva que permet passar un paràmetre del component a la vista i viceversa.",
	"angular.directives.ngmodel.explicacio2": "És única directiva que es pot utilitzar per al <i>Two Way Data Binding</i>.",
	"angular.directives.ngmodel.redirect": "Per veure'n exemples, mireu la secció",
	"angular.directives.ngstyle.explicacio": "<i>ngStyle</i> és una directiva que permet aplicar estils a un tag.",
	"angular.directives.ngstyle.on1": "On <code>styleName</code> és el nom de la propietat CSS, <code>styleValue</code> és el valor que se li vol assignar a la propietat, <code>styleUnit</code> és la unitat de mesura amb la que s'aplicarà la propietat en cas necessari, <code>object</code> és un objecte (clau/valor) on la cada clau seria una propietat CSS a aplicar i el valor seria el valor de la propietat; i <code>variable</code> és una variable de tipus string que contindria el valor de la propietat CSS.",
	"angular.directives.ngstyle.on2": "La unitat de mesura també es pot especificar en cada valor de les propietats CSS.",
	"angular.directives.ngswitch.explicacio": "<i>ngSwitch</i> és una directiva que permet mostrar un codi HTML o altre depenent del valor d'una variable.",
	"angular.directives.ngswitch.on1": "On <code>variable</code> és la variable a comprovar, <code>value</code> el possible valor que es comprovarà i <code>content</code> el contingut que es mostrarà si el valor coincideix amb el de la variable.",
	"angular.directives.ngswitch.on2": "En cas de que no coincideixi amb cap es mostrarà el contingut del tag que contingui l'atribut <code>*ngSwitchDefault</code> si s'ha informat.",
	"angular.directives.ngtemplateoutlet.explicacio": "<i>NgTemplateOutlet</i> és una directiva per que permet pintar el contingut d'un <i>NgTemplate</i> en un <i>NgContainer</i> i aplicar-li, si es vol, variables mitjançant un context.",
	"angular.directives.ngtemplateoutlet.on": "<span>On:</span><ul> <li><code>idTemplate</code>: és l'identificador del <i>NgTemplate</i>.</li><li><code>content</code>: és el contingut que es vol mostrar.</li><li><code>default</code>: és l'alies a assignar a la variable per defecte del context (introduïda en <code>$implicit</code>).</li><li><code>defaultValue</code>: és el valor de la variable per defecte (introduïda en <code>$implicit</code>).</li><li><code>variable</code>: és una variable que pots assignar a banda de la que hi ha per defecte (podent assignar tantes com es vulgui).</li><li><code>variableValue</code>: és el valor de la variable.</li><li><code>alias</code>: és l'alies a assignar a una de les variables.</li><li><code>contextObj</code>: és una variable del component que representa el context.</li></ul>",
	"angular.directives.ngvalue.explicacio1": "<i>NgValue</i> és una directiva que permet passar un paràmetre del component a la vista de la mateixa manera que es podria fer amb <code>[value]</code>.",
	"angular.directives.ngvalue.explicacio2": "La diferencia que hi ha entre <code>[value]</code> i <code>[ngValue]</code> és que el primer sempre serà text i el segon poden ser objectes.",
	"angular.directives.structures.container.explicacio1": "Amb aquesta estructura podem fer servir múltiples directives amb asteriscs, un en el mateix <i>ngContainer</i> i l'altre en el fill.",
	"angular.directives.structures.container.explicacio2": "El <i>NgContainer</i> mai es mostrarà al HTML final, sinó que només es mostrarà el seu contingut.",
	"angular.directives.structures.container.explicacio3": "(Amb la consola de desenvolupador del navegador podeu comprovar que no apareix el tag <code>ng-container</code>)",
	"angular.directives.structures.explicacio1": "Com hem pogut veure, en les directives <i>ngIf</i>, <i>ngFor</i> i <i>ngSwitch</i> es fa servir un asterisc (<code>*</code>) com a prefix d'aquestes (o d'atributs auxiliars en el cas del <i>ngSwitch</i>).",
	"angular.directives.structures.explicacio2": "Aquest asterisc indica que la directiva modifica l'estructura HTML i Angular internament traduirà el codi en un altre que faci servir el ng-template.",
	"angular.directives.structures.explicacio3": "Per exemple tenim el següent codi de l'esquerra que Angular el traduirà al de la dreta:",
	"angular.directives.structures.explicacio4": "En un tag només pot haver-hi una directiva amb asterisc a la vegada. Si fessim el següent exemple no funcionaria:",
	"angular.directives.structures.explicacio5": "Per fer-lo funcionar hauríem de moure el <i>ngIf</i> a un tag pare o fer servir el una estructura auxiliar.",
	"angular.directives.structures.menu": "Directives: Estructures Auxiliars",
	"angular.directives.structures.template.explicacio1": "Amb aquesta estructura podem declarar una estructura HTML. Aquesta estructura per si sola no apareixerà, sinó que només ho farà si li apliquem un <i>ngIf</i>, <i>ngFor</i>, <i>ngSwitchCase</i> o <i>ngSwitchDefault</i>; o si la cridem mitjançant el <i>else</i> o <i>then</i> del <i>ngIf</i>.",
	"angular.directives.structures.template.explicacio2": "En el cas del <i>NgContainer</i>, on normalment fariem servir asterisc, farem servir claudàtors (<code>[]</code>) o l'atribut tal qual en cas de que no se li necessiti passar cap paràmetre, pel que podrem posar directives juntes quan normalment no podríem (una amb asterisc i l'altre amb claudàtors).",
	"angular.directives.structures.template.explicacio3": "De la mateixa manera que el <i>NgContainer</i>, el <i>NgTemplate</i> mai es mostrarà al HTML final, sinó que només es mostrarà el seu contingut.",
	"angular.directives.structures.template.explicacio4": "(Amb la consola de desenvolupador del navegador podeu comprovar que no apareix el tag <code>ng-template</code>)",
	"angular.directives.structures.title": "Estructures Auxiliars",
	"angular.http.arrayBuffer": "array de bytes. Útil per exemple per desar el contingut en un fitxer.",
	"angular.http.blob": "objecte binari. Útil per exemple per desar el contingut en un fitxer.",
	"angular.http.delete": "Realitza una petició delete. Se li passa una URL i les opcions de la petició.",
	"angular.http.exemple1": "Un exemple de petició seria el següent:",
	"angular.http.exemple2": "Un exemple de petició amb <code>responseType</code> seria el següent:",
	"angular.http.exemple3": "Un exemple de petició amb resposta tipada seria el següent:",
	"angular.http.exemple4": "Un exemple de petició amb accés tots els paràmetres de la resposta seria el següent:",
	"angular.http.explicacio1": "Angular incorpora un client HTTP amb el qual podem fer crides a API per tal de poder rebre i enviar informació.",
	"angular.http.explicacio10": "Aquest paràmetre accepta les següents opcions:",
	"angular.http.explicacio11": "En canvi, si volguéssim convertir la resposta en alguna classe pròpia hauríem de ficar el nom de la classe abans dels paràmetres, entre claus angulars <code>&lt;&gt;</code>.",
	"angular.http.explicacio12": "A més a més, per defecte el client HTTP retorna directament el cos de la resposta. Si volem veure altres paràmetres de la resposta ho haurem d'indicar a les opcions.",
	"angular.http.explicacio2": "Per a fer servir el <i>HttpClient</i> s'ha de realitzar la següent importació al app.module.ts:",
	"angular.http.explicacio3": "I incorporar-lo la llista de imposts del mateix fitxer:",
	"angular.http.explicacio4": "Llavors s'ha d'importar el client a la classe on el volem fer servir:",
	"angular.http.explicacio5": "I finalment declarar-lo al constructor:",
	"angular.http.explicacio6": "Recomano fer servir el <i>HttpClient</i> en un servei i no directament en un component.",
	"angular.http.explicacio7": "El <i>HttpClient</i> conté múltiples funcions, però les que més ens interessen són les següents:",
	"angular.http.explicacio8": "Un cop declarada la funció a fer servir del <i>HttpClient</i> haurem de cridar a la funció <code>suscribe</code> per a realitzar la crida http. Aquesta funció retornarà una funció de fletxa amb la resposta de la petició.",
	"angular.http.explicacio9": "Per defecte el client HTTP retorna el cos de la resposta en JSON, però podem manipular el tipus de la resposta amb el paràmetre <code>responseType</code> en les opcions.",
	"angular.http.get": "Realitza una petició get. Se li passa una URL i les opcions de la petició.",
	"angular.http.interceptors.explicacio1": "El <i>HttpClient</i> permet afegir interceptors, els quals permeten manipular les crides HTTP abans de ser enviades.",
	"angular.http.interceptors.explicacio2": "Pot ser útil per afegir un token a totes les crides d'una API per exemple.",
	"angular.http.interceptors.explicacio3": "Per crear un interceptor s'ha de crear una classe que implementi <code>HttpInterceptor</code> i declarar-lo als <code>app.module.ts</code>, tal i com es pot veure en el següent exemple:",
	"angular.http.interceptors.explicacio4": "Aquest exemple crida a un servidor que retorna un JSON amb un camp <code>msg</code> que tindrà com a valor el mateix que s'envii en la capçalera \"sample\" de la petició:",
	"angular.http.json": "és la opció per defecte amb el que podrem consultar les dades con qualsevol objecte de Javascript.",
	"angular.http.patch": "Realitza una petició patch. Se li passa una URL, un cos i les opcions de la petició.",
	"angular.http.post": "Realitza una petició post. Se li passa una URL, un cos i les opcions de la petició.",
	"angular.http.put": "Realitza una petició put. Se li passa una URL, un cos i les opcions de la petició.",
	"angular.http.text": "una cadena de text al qual podrem assignar a una variable string.",
	"angular.routing.can.activate.exemple": "Aquesta classe validarà si se li ha inserit un usuari (des d'algun component que importi el servei) i, si no és així, redirigirà a <i>login</i>.",
	"angular.routing.can.activate.explicacio": "El Can Activate es una classe la qual ha d'implementar un servei. Aquest ha de tenir una funció canActivate() la qual haurà de realitzar les validacions necessàries per discernir si l'usuari té accés o no a la ruta i retornar true o false depenent de la validació. També es poden realitzar accions depenent del resultat, com ara fer una redirecció si l'usuari no te accés a la ruta que ha sol·licitat.",
	"angular.routing.can.activate.title": "Can Activate",
	"angular.routing.config.explicacio1": "Primer de tot crearem el fitxer <code>src/app/app-routing.module.ts</code> el qual ha de tenir el següent aspecte:",
	"angular.routing.config.explicacio2": "Tot seguit l'incorporem al <code>src/app/app.module.ts</code>:",
	"angular.routing.config.explicacio3": "A partir d'aquí ja podem configurar les rutes per al nostre projecte.",
	"angular.routing.config.explicacio4": "Una alternativa és configurar-ho tot directament al fitxer <code>src/app/app-routing.module.ts</code>",
	"angular.routing.config.subtitle": "Alternativa curta",
	"angular.routing.config.title": "Configurar el projecte per a acceptar rutes",
	"angular.routing.exemple.explicacio1": "Crearem una aplicació que mostrarà una llista de notes y podrem accedir a cada una d'elles per veure'n el nom. Aquesta pantalla tindrà a una pantalla de login la qual serà l'unica a la que tindrem accès si no ens em identificat.",
	"angular.routing.exemple.explicacio10": "Definirem el component de notes al qual simplement li afegirem un llistat de notes amb una id i un nom cada una.",
	"angular.routing.exemple.explicacio11": "Finalment definirem el component <i>note</i> al qual simplement recuperarem el <i>id</i> de la ruta i l'imprimirem.",
	"angular.routing.exemple.explicacio2": "Definim les rutes al <code>app.module.ts</code> amb els seus components.",
	"angular.routing.exemple.explicacio3": "Totes les pantalles menys login tindran un <code>canActivate</code> que ens impedirà l'accés dels que no s'identifiquin.",
	"angular.routing.exemple.explicacio4": "Posarem també un redirect per a les rutes no tractades, que redirigirà a 'notes'.",
	"angular.routing.exemple.explicacio5": "Crearem el servei <code>AuthGuardService</code> que implementarà <code>CanActivate</code>.",
	"angular.routing.exemple.explicacio6": "La funció <code>canActivate()</code> serà la que definirà quan es té accés, redirigint al login en cas contrari.",
	"angular.routing.exemple.explicacio7": "Definirem el component principal. Aquí crearem 3 enllaços: el primer anirà al <i>welcome</i>, el segon a <i>notes</i> i el tercer llançarà una funció que ens tancarà la sessió i ens redirigirà a login. Amb el router també controlarem la ruta actual per mostrar o no els enllaços.",
	"angular.routing.exemple.explicacio8": "Definirem el component de login amb la funció que ens autenticarà i, en cas de que l'autenticació sigui correcte, desarà l'usuari al servei <code>AuthGuardService</code> i ens redirigirà a 'notes'.",
	"angular.routing.exemple.explicacio9": "Definirem el component de benvinguda que recuperarà l'usuari de <code>AuthGuardService</code> i ens saludarà.",
	"angular.routing.exemple.menu": "Routing: Exemple d'aplicació amb routing",
	"angular.routing.exemple.title": "Exemple d'aplicació amb routing",
	"angular.routing.explicacio1": "El <i>routing</i> és la forma de dir-li a Angular quins components es faran servir depenent de les rutes per on vagi navegant l'usuari.",
	"angular.routing.explicacio2": "Quan es crea un projecte nou amb Angular Cli aquest et pregunta si el vols implementar, creant-te el fitxer <code>src/app/app-routing.module.ts</code>, per poder configurar les diferents rutes, i configurant-te el <code>src/app/app.module.ts</code>.",
	"angular.routing.explicacio3": "En cas de no haver generat el fitxer amb Angular Cli podem configurar el projecte manualment.",
	"angular.routing.get.params.explicacio": "Quan s'accedeixen a rutes a les quals se'ls hi passa un o varis paràmetres per la ruta, aquests es poden recuperar en el component, gràcies a la classe <code>ActivatedRoute</code>, de la següent forma:",
	"angular.routing.get.params.exemple1": "Amb <code>ActivatedRoute.snapshot.paramMap.get</code> podem obtenir el paràmetre desitjat. Aquest mètode se sol fer servir per recuperar una sola vegada el paràmetre, normalment en el <code>ngOnInit</code>.",
	"angular.routing.get.params.exemple2": "En canvi, amb <code>ActivatedRoute.params.subscribe</code> podem vigilar els paràmetres de la ruta, de tal forma que podem llençar una funció cada cop que aquests canviïn i recuperar-los.",
	"angular.routing.get.params.menu": "Routing: Recuperar paràmetres de la ruta",
	"angular.routing.get.params.title": "Recuperar paràmetres de la ruta",
	"angular.routing.location.strategy.explicacio": "Angular té dues estratègies a l'hora de tractar les URL quan es navega per l'aplicació: PathLocationStrategy i HashLocationStrategy",
	"angular.routing.location.strategy.hash1": "Amb aquesta configuració la ruta funciona a partir d'un hash (<code>#</code>). Un exemple seria el següent:",
	"angular.routing.location.strategy.hash2": "On <code>my-app</code> seria la ruta principal de l'aplicació i <code>welcome</code> un component dins l'aplicació.",
	"angular.routing.location.strategy.hash3": "Aquesta configuració és la més senzilla d'utilitzar ja que no requereix de configuracions del servidor.",
	"angular.routing.location.strategy.hash4": "El HashLocationStrategy no està configurat per defecte en Angular, pel que s'ha de configurar modificant el RouterModule de la següent forma:",
	"angular.routing.location.strategy.menu": "Routing: Estratègia de localització",
	"angular.routing.location.strategy.path1": "Amb aquesta configuració la ruta funciona de forma estandard. Un exemple seria el seguent:",
	"angular.routing.location.strategy.path2": "On <code>my-app</code> seria la ruta principal de l'aplicació i <code>welcome</code> un component dins l'aplicació.",
	"angular.routing.location.strategy.path3": "Aquesta configuració provoca que les rutes que no siguin l'arrel donin un error 404 si s'intenta accedir directament en comptes de navegar per l'aplicació. Per a que la resta de rutes funcionin s'hauria de configurar el servidor per a que redirigeixi al index.html.",
	"angular.routing.location.strategy.path4": "El PathLocationStrategy és la configuració per defecte en Angular, però es pot configurar manualment modificant el RouterModule de la següent forma:",
	"angular.routing.location.strategy.title": "Estratègia de localització",
	"angular.routing.navigation.explicacio": "Un cop configurada la nostre aplicació per a poder navegar entre diferents components podem programar-la per poder-hi navegar.",
	"angular.routing.navigation.menu": "Routing: Navegació",
	"angular.routing.navigation.router": "El <i>router</i> es una classe que es pot importar a qualsevol component o servei per tal de poder redirigir de pàgina en les funcions typescript. També es pot fer servir per consultar la ruta actual.",
	"angular.routing.navigation.router.exemple1": "Exemple de redirecció simple:",
	"angular.routing.navigation.router.exemple2": "Exemple de redirecció passant un paràmetre:",
	"angular.routing.navigation.router.exemple3": "Exemple de consulta de la ruta actual:",
	"angular.routing.navigation.router.link": "El <i>router link</i> és un atribut per al tag <code>a</code> que serveix per indicar a quin component redirigirà l'enllaç. Es pot posar directament si només se li vol posar el path o entre claudàtors (<code>[]</code>) si se li vol passar una variable i/o paràmetres de ruta.",
	"angular.routing.navigation.router.link.active.exemple1": "Si l'usuari és a <code>/link</code> se li aplicarà la classe <i>activated</i> al tag <code>a</code>.",
	"angular.routing.navigation.router.link.active.exemple2": "Si l'usuari és a <code>/link/1</code> se li aplicarà la classe <i>activated</i> al tag <code>a</code>.",
	"angular.routing.navigation.router.link.active.exemple3": "Si l'usuari és a <code>/link</code> se li aplicarà la classe <i>activated</i> al tag <code>div</code>.",
	"angular.routing.navigation.router.link.active.exemple4": "Si l'usuari és exactament a <code>/link/1</code> se li aplicarà la classe <i>activated</i> al tag <code>a</code>.",
	"angular.routing.navigation.router.link.active1": "El <i>router link active</i> és un atribut per al tag <code>a</code> o el seu tag pare que serveix per aplicar la classe indicada en cas de que l'usuari estigui a la mateixa ruta que la que indiqui el <i>router link</i>.",
	"angular.routing.navigation.router.link.active2": "Pot anar acompanyat de <code>[routerLinkActiveOptions]=\"{exact: true}\"</code> si es vol que s'apliqui només quan la ruta sigui exacte.",
	"angular.routing.navigation.router.link.exemple1": "L'enllaç redirigirà al path <i>link</i> que s'hagi configurat al RouterModule.",
	"angular.routing.navigation.router.link.exemple2": "L'enllaç redirigirà al path que s'hagi configurat al RouterModule que correspongui al valor de la variable del component <i>link</i>.",
	"angular.routing.navigation.router.link.exemple3": "L'enllaç redirigirà al path <i>link</i>, amb un paràmetre amb el valor que contingui la variable <i>id</i>, que s'hagi configurat al RouterModule.",
	"angular.routing.navigation.router.link.exemple4": "L'enllaç redirigirà al path que s'hagi configurat al RouterModule que correspongui al valor de la variable del component <i>link</i> amb un paràmetre amb el valor que contingui la variable <i>id</i>.",
	"angular.routing.navigation.router.outlet1": "El <i>router outlet</i> és el tag que es fa servir per indicar-li a Angular on ha de posar el component que pertoqui segons la url. Per defecte, si em configurat el projecte amb rutes mitjançant l'Angular CLI, Angular el posa a <code>src/app/app.component.html</code>. Té el següent aspecte:",
	"angular.routing.navigation.router.outlet2": "Aquest tag es pot posar on es vulgui, però només es pot posar un, si se'n posa més Angular només agafarà el primer que trobi quan renderitzi l'aplicació.",
	"angular.routing.navigation.title": "Navegació",
	"angular.routing.rutes.exemple1": "La primera configuració, quan la ruta sigui <code>/login</code>, activarà el component <i>LoginComponent</i> i el <i>Router Outlet</i> el pintarà.",
	"angular.routing.rutes.exemple2": "La segona configuració, quan la ruta sigui <code>/welcome</code>, activarà el component <i>WelcomeComponent</i> i el <i>Router Outlet</i> el pintarà si el AuthGuardService valida l'accés correctament.",
	"angular.routing.rutes.exemple3": "La tercera configuració, quan la ruta sigui <code>/notes</code>, activarà el component <i>NotesComponent</i> i el <i>Router Outlet</i> el pintarà si el AuthGuardService valida l'accès correctament.</li>",
	"angular.routing.rutes.exemple4": "La quarta configuració, quan la ruta sigui <code>/note/</code> seguida d'un identificador (per exemple <code>/note/3</code>), activarà el component <i>NoteComponent</i> i el <i>Router Outlet</i> el pintarà si el AuthGuardService valida l'accés correctament.",
	"angular.routing.rutes.exemple5": "La última configuració fa que la resta de rutes que no concordin amb les anteriors configuracions redirigeixin a <i>notes</i> i la seva configuració.",
	"angular.routing.rutes.explicacio1": "Les rutes es configuren en el fitxer <code>src/app/app-routing.module.ts</code>, dins de la variable routes.",
	"angular.routing.rutes.explicacio2": "Cada ruta estarà definida dins de claus(<code>{ }</code>) i pot tenir els següents paràmetres:",
	"angular.routing.rutes.taula.canActivate": "Classe que implementa CanActivate, la qual podrem programar per a que validi el que ens sigui necessari en la aplicació per tal de discernir si l'usuari pot accedir a la ruta o no.",
	"angular.routing.rutes.taula.component": "És el component que s'executarà al accedir a la ruta definida, juntament amb el seu HTML.",
	"angular.routing.rutes.taula.path": "És la ruta a la qual podràs navegar-hi. Se li poden passar paràmetres o expressions regulars.",
	"angular.routing.rutes.taula.redirectTo": "En comptes de definir un component podem redirigir a una altre ruta.",
	"angular.routing.rutes.title": "Configuració de les rutes",
	"cercar": "Cercar",
	"component": "Component",
	"exemple": "Exemple",
	"exemple.descarregar": "Descarregar exemple",
	"exemples": "Exemples",
	"explicacio": "Explicació",
	"mateix.component": "mateix component",
	"netejar.filtre": "Netejar filtre",
	"no": "No",
	"objecte": "Objecte",
	"or": "O",
	"parametre": "Paràmetre",
	"que.es": "Que és?",
	"representacio.single.title": "Es representa de la següent forma:",
	"representacio.title": "Es pot representar de varies formes:",
	"resultat": "Resultat",
	"resultat.escriviu": "escriviu dins dels camps",
	"saludar": "saludar",
	"salutacio": "hola",
	"si": "Sí",
	"tipus": "Tipus",
	"title": "Curs Angular",
	"tots": "Tots",
	"variable": "Variable",
	"vista": "Vista"
}
